# TOML 格式的 [Air](https://github.com/cosmtrek/air) 配置文件

# 工作目录
# . 或绝对路径，请注意以下目录必须在根目录下。
root = "."
tmp_dir = "tmp"

[build]
# 只是普通的旧 shell 命令。 您也可以使用 `make`
# cmd = "go build -o ./tmp/main ."
cmd = "make build"
# 二进制文件从 `cmd` 产生。
bin = "_output/mini"
# 自定义二进制文件，可以在运行应用程序时设置环境变量。
full_bin = "APP_ENV=dev APP_USER=air ./_output/mini"
# 观看这些文件扩展名。
include_ext = ["go", "tpl", "tmpl", "html"]
# 忽略这些文件扩展名或目录。
exclude_dir = ["assets", "tmp", "vendor", "frontend/node_modules"]
# Watch these directories if you specified.
include_dir = []
# Watch these files.
include_file = []
# Exclude files.
exclude_file = []
# Exclude specific regular expressions.
exclude_regex = ["_test\\.go"]
# Exclude unchanged files.
exclude_unchanged = true
# Follow symlink for directories
follow_symlink = true
# 此日志文件位于您的 tmp_dir 中。
log = "air.log"
# 如果太频繁，则不必在每次文件更改时都触发构建。
delay = 0 # ms
# 发生构建错误时停止运行旧二进制文件。
stop_on_error = true
# 杀死进程前发送中断信号（windows不支持此功能）
send_interrupt = false
# 发送中断信号后的延时
kill_delay = 500 # ms
# 是否重新运行二进制文件
rerun = false
# 每次执行后延迟
rerun_delay = 500
# 运行二进制 (bin/full_bin) 时添加额外的参数。 将运行 './tmp/main hello world'.
args_bin = ["hello", "world"]

[log]
# 显示日志时间
time = false
#只显示主日志（沉默观察者、构建、运行者）
main_only = false

[color]
# 自定义每个部分的颜色。 如果未找到颜色，请使用原始应用程序日志。
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[misc]
# 退出时删除 tmp 目录
clean_on_exit = true